<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Retrieve</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>retrieve</Shortcut>
      <Description>Ruft einen Datensatz einer bestimmten Entität ab</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entität</ToolTip>
          <Default>account</Default>
        </Literal>
        <Literal>
          <ID>id</ID>
          <ToolTip>Eindeutiger Bezeichner des Datensatzes.</ToolTip>
          <Default>1234567890</Default>
        </Literal>
        <Literal>
          <ID>fields</ID>
          <ToolTip>Kommagetrennte Felder die abgerufen werden. (Optional)</ToolTip>
          <Default>$?select=fieldname</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
     Xrm.WebApi.retrieveRecord("$entity$", "$id$", "$fields$").then(
    function success(result) {
        console.log(`Success`);
    },
    function (error) {
        console.log(error.message);
    }
);
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Retrieve Expand</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>retrieveexpand</Shortcut>
      <Description>Ruft einen Datensatz einer bestimmten Entität ab. Außerdem wird eine verknüpfte Entität mitangefordert.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entität</ToolTip>
          <Default>account</Default>
        </Literal>
        <Literal>
          <ID>id</ID>
          <ToolTip>Id des Datensatzes</ToolTip>
          <Default>1234567890</Default>
        </Literal>
        <Literal>
          <ID>lookupfield</ID>
          <ToolTip>Lookupfeld des Datensatzes, über die eine verbundene Entität abgerufen wird.</ToolTip>
          <Default>primarycontactid</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
     Xrm.WebApi.retrieveRecord("$entity$", "$id$", "?$$select=name&$$expand=$lookupfield$($$select=contactid,fullname)").then(
    function success(result) {
        console.log(`Retrieved values: Name: $${result.name}, Lookup Entity Id: $${result.lookupfield.contactid}, Lookup Entity Name: $${result.lookupfield.fullname}`);
    },
    function (error) {
        console.log(error.message);
    }
);
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Retrieve Multiple</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>retrievemultiple</Shortcut>
      <Description>Ruft mehrere Datensätze einer Entität ab.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entität</ToolTip>
          <Default>account</Default>
        </Literal>
        <Literal>
          <ID>fields</ID>
          <ToolTip>Kommagetrennte Felder die abgerufen werden. (Optional)</ToolTip>
          <Default>$?select=fieldname</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
     Xrm.WebApi.retrieveMultipleRecords("$entity$", "$fields$").then(
    function success(result) {
        for (var i = 0; i < result.entities.length; i++) {
            console.log(result.entities[i]);
        }
    },
    function (error) {
        console.log(error.message);
    }
);
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Update</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>update</Shortcut>
      <Description>Aktualisiert einen Datensatz.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>stringval</ID>
          <ToolTip>JSON Angabe eines Textwerts.</ToolTip>
          <Default>abc</Default>
        </Literal>
        <Literal>
          <ID>boolval</ID>
          <ToolTip>JSON Angabe eines Wahrheitswerts.</ToolTip>
          <Default>true</Default>
        </Literal>
        <Literal>
          <ID>doubleval</ID>
          <ToolTip>JSON Angabe eines Gleitkommawerts.</ToolTip>
          <Default>1.234</Default>
        </Literal>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entität</ToolTip>
          <Default>account</Default>
        </Literal>
        <Literal>
          <ID>id</ID>
          <ToolTip>Eindeutiger Bezeichner des Datensatzes.</ToolTip>
          <Default>1234567890</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
var data =
{
    "text_field": "$stringval$",
    "bool_field": $boolval$,
    "double_field": $doubleval$,
}
// update the record
Xrm.WebApi.updateRecord("$entity$", "$id$", data).then(
    function success(result) {
    },
    function (error) {
        console.log(error.message);
    }
);
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Delete</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>delete</Shortcut>
      <Description>Löscht einen Datensatz einer Entität.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entität</ToolTip>
          <Default>account</Default>
        </Literal>
        <Literal>
          <ID>id</ID>
          <ToolTip>Eindeutiger Bezeichner des Datensatzes.</ToolTip>
          <Default>1234567890</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
     Xrm.WebApi.deleteRecord("$entity$", "$id$").then(
    function success(result) {
        console.log("Record deleted");
    },
    function (error) {
        console.log(error.message);
    }
);
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Alert Dialog</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>alertdialog</Shortcut>
      <Description>Ruft einen AlertDialog auf.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>title</ID>
          <ToolTip>Titel des Dialogs</ToolTip>
          <Default>Warnung</Default>
        </Literal>
        <Literal>
          <ID>text</ID>
          <ToolTip>Text der dem Benutzer im AlertDialog angezeigt werden soll.</ToolTip>
          <Default>Dies ist ein Warntext.</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
Xrm.Navigation.openAlertDialog(
    {
        title: "$title$",
        text: "$text$",
        confirmButtonLabel: "Ok"
    });
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Error Dialog</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>errordialog</Shortcut>
      <Description>Ruft einen ErrorDialog auf.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>errorcode</ID>
          <ToolTip>Fehlercode</ToolTip>
          <Default>404</Default>
        </Literal>
        <Literal>
          <ID>message</ID>
          <ToolTip>Text der dem Benutzer im ErrorDialog angezeigt werden soll.</ToolTip>
          <Default>Ein Fehler ist aufgetreten! Senden Sie Ihrem Supportteam den angezeigten Fehlercode und die Details.</Default>
        </Literal>
        <Literal>
          <ID>details</ID>
          <ToolTip>Details die dem Benutzer im AlertDialog angezeigt werden soll.</ToolTip>
          <Default>Fehlerdetails.</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
Xrm.Navigation.openErrorDialog({ errorCode: $errorcode$, message: "$message$", details: "$details$" }).then(
    function (success) {
        console.log(success);
    },
    function (error) {
        console.log(error);
    });
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Confirm Dialog</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>confirmdialog</Shortcut>
      <Description>Ruft einen ConfirmDialog auf.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>title</ID>
          <ToolTip>Titel des ConfirmDialogs.</ToolTip>
          <Default>Eingabe bestätigen</Default>
        </Literal>
        <Literal>
          <ID>text</ID>
          <ToolTip>Text der dem Benutzer angezeigt werden soll.</ToolTip>
          <Default>Möchten Sie fortfahren?</Default>
        </Literal>
      </Declarations>
      <Code Language="TypeScript">
        <![CDATA[
Xrm.Navigation.openConfirmDialog({ title: "$title$", text: "$text$" }).then(
    function (success) {
        if (success.confirmed)
            console.log("Dialog closed using OK button.");
        else
            console.log("Dialog closed using Cancel button or X.");
    });
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.1.0">
    <Header>
      <Title>Template: Form</Title>
      <Author>DE_TU@ec4u.de</Author>
      <Shortcut>templateform</Shortcut>
      <Description>Erstellt eine Typescript Vorlage für Formulare.
      Diese wird im onload Event von D365 Formularen registriert. Mit der registerEvents Methode dieser Vorlage können Controls mit Events erweitert werden.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Code Language="TypeScript">
        <![CDATA[
namespace ec4u.Entity.Script {
   var formContext : Xrm.FormContext;

    export function onLoad(_eventContext:Xrm.Events.EventContext) {
        formContext = _eventContext.getFormContext();

        registerEvents();

        switch (formContext.ui.getFormType()) {
            case XrmEnum.FormType.Create:
                // Create Logic
                break;
            case XrmEnum.FormType.Update:
                // Update Logic
            default:
                break;
        }
    }
    function registerEvents() : void {
        formContext.getAttribute("ec4u_name").addOnChange(onFieldChanged);
    }
    function onFieldChanged() {
        
    }
}
    ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  
</CodeSnippets>